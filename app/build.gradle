apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.compileSdk
    defaultConfig {
        applicationId "info.tommarsh.mynews"
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "info.tommarsh.mynews.runner.HiltTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }

    dynamicFeatures = [":article", ':onboarding']
}

dependencies {

    api project(':core')
    implementation project(':categories')
    implementation project(':search')

    //Dagger
    implementation "com.google.dagger:hilt-android:" + rootProject.daggerVersion
    kapt "com.google.dagger:hilt-android-compiler:" + rootProject.daggerVersion
    kapt 'androidx.hilt:hilt-compiler:' + rootProject.jetpackHiltVersion
    androidTestImplementation "com.google.dagger:hilt-android-testing:" + rootProject.daggerVersion
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:" + rootProject.daggerVersion

    implementation "androidx.appcompat:appcompat:" + rootProject.appCompatVersion

    //Adapter delegates
    implementation 'com.hannesdorfmann:adapterdelegates4-kotlin-dsl-layoutcontainer:' + rootProject.adapterDelegatesVersion

    //Testing
    testImplementation 'junit:junit:' + rootProject.jUnitVersion
    testImplementation "androidx.fragment:fragment-testing:" + rootProject.fragmentVersion
    testImplementation 'org.mockito:mockito-inline:' + rootProject.mockitoInlineVersion
    testImplementation 'org.mockito.kotlin:mockito-kotlin:' + rootProject.mockitoKotlinVersion
    testImplementation 'androidx.arch.core:core-testing:' + rootProject.lifecycleTestingVersion
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:' + rootProject.coroutinesTestVersion
    testImplementation 'app.cash.turbine:turbine:' + rootProject.turbineVersion
    debugImplementation "androidx.fragment:fragment-testing:" + rootProject.fragmentVersion

    //Espresso
    androidTestImplementation 'org.mockito:mockito-android:' + rootProject.mockitoAndroidVersion
    androidTestImplementation "androidx.fragment:fragment-testing:" + rootProject.fragmentVersion
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espressoVersion
    androidTestImplementation 'androidx.test:runner:' + rootProject.espressoRunnerVersion
    androidTestImplementation 'androidx.test:rules:' + rootProject.espressoRunnerVersion
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:' + rootProject.espressoVersion
    androidTestImplementation 'androidx.test.espresso:espresso-intents:' + rootProject.espressoVersion
}

kapt {
    generateStubs = true
}
