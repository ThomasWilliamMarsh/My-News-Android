apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.compileSdk

    defaultConfig {
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'BASE_URL', '"https://newsapi.org"'
        buildConfigField 'String', 'YOUTUBE_BASE_URL', '"https://www.googleapis.com/youtube/v3/"'

        buildConfigField 'String', 'API_KEY', '"d5ee3082f9e947d7868482d8f1199266"'
        buildConfigField 'String', 'YOUTUBE_API_KEY', '"AIzaSyBKHdX73GIAGcXCIdgz78o0ON_qZLboI64"'
        buildConfigField 'String', 'YOUTUBE_PLAYLIST', '"PLS3XGZxi7cBVNadbxDqZCUgISvabEpu-g"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    // Kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"

    //Ktx
    api 'androidx.core:core-ktx:' + rootProject.coreKtxVersion

    //Google
    api 'com.google.android.material:material:' + rootProject.materialVersion
    api 'androidx.appcompat:appcompat:' + rootProject.appCompatVersion
    api 'androidx.cardview:cardview:' + rootProject.cardViewVersion
    api "androidx.fragment:fragment-ktx:1.2.4"
    api 'androidx.recyclerview:recyclerview:' + rootProject.recyclerViewVersion
    api 'androidx.constraintlayout:constraintlayout:' + rootProject.constraintLayoutVersion
    api 'androidx.room:room-runtime:' + rootProject.roomVersion
    api 'androidx.room:room-ktx:' + rootProject.roomVersion
    api 'com.google.firebase:firebase-config:' + rootProject.remoteConfigVersion
    implementation 'com.google.android.play:core-ktx:' + rootProject.playCoreVersion
    kapt 'androidx.room:room-compiler:' + rootProject.roomVersion
    api 'androidx.hilt:hilt-lifecycle-viewmodel:' + rootProject.jetpackHiltVersion
    api 'androidx.hilt:hilt-work:' + rootProject.jetpackHiltVersion

    //Work Manager
    api 'androidx.work:work-runtime-ktx:' + rootProject.workmanagerVersion
    implementation 'androidx.work:work-gcm:' + rootProject.workmanagerVersion

    //OkHttp
    implementation 'com.squareup.okhttp3:okhttp:' + rootProject.okHttpVersion

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:' + rootProject.retrofitVersion
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.retrofitVersion

    //Navigation
    api "androidx.navigation:navigation-fragment-ktx:" + rootProject.navigationVersion
    api "androidx.navigation:navigation-ui-ktx:" + rootProject.navigationVersion
    api "androidx.navigation:navigation-dynamic-features-fragment:" + rootProject.navigationVersion

    //Lifecycle
    api 'android.arch.lifecycle:extensions:' + rootProject.lifecycleVersion
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:' + rootProject.lifecycleVersion
    api 'androidx.lifecycle:lifecycle-livedata-ktx:' + rootProject.lifecycleVersion

    //Coroutines
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:' + rootProject.coroutinesVersion
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:' + rootProject.coroutinesVersion
    api 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:' + rootProject.coroutinesAdapter

    //Dagger
    implementation "com.google.dagger:hilt-android:" + rootProject.hiltVersion
    api "com.google.dagger:hilt-android:" + rootProject.hiltVersion
    kapt "com.google.dagger:hilt-android-compiler:" + rootProject.hiltVersion

    //Gson
    implementation 'com.google.code.gson:gson:' + rootProject.gsonVersion

    //Browser
    api "com.android.support:customtabs:" + rootProject.tabVersion

    //Time parsing
    api 'joda-time:joda-time:' + rootProject.jodaTimeVersion

    //Glide
    api 'com.github.bumptech.glide:glide:' + rootProject.glideVersion
    kapt 'com.github.bumptech.glide:compiler:' + rootProject.glideVersion

    //Lottie
    api 'com.airbnb.android:lottie:' + rootProject.lottieVersion

    //Testing
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:'+ rootProject.coroutinesTestVersion
    testImplementation 'junit:junit:' + rootProject.jUnitVersion
    testImplementation 'androidx.arch.core:core-testing:' + rootProject.lifecycleTestingVersion
    testImplementation 'org.mockito:mockito-inline:' + rootProject.mockitoInlineVersion
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:' + rootProject.mockitoKotlinVersion
}
